name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./mail
        file: ./mail/DOCKERFILE
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/my_email_app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Debug SSH Setup Before
      run: ls -la ~/.ssh || echo "No ~/.ssh directory"
    
    - name: Setup SSH
      run: |
        sudo mkdir -p ~/.ssh
        printf "%s" "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        sudo chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H example.com >> ~/.ssh/known_hosts
    
    - name: Debug SSH Setup After
      run: ls -la ~/.ssh
    
    - name: Deploy to EC2
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}
        
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/my_email_app:latest
          sudo docker stop my_email_app || true
          sudo docker rm my_email_app || true
          sudo docker run -d --name my_email_app -p 80:8000 ${{ secrets.DOCKER_USERNAME }}/my_email_app:latest
        EOF